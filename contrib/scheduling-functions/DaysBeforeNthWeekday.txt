Function name: DaysBeforeNthWeekday

Author: Jonathan Kamens <jik@kamens.us>

Back story
----------

A user on the send-later-users mailing list
(https://groups.google.com/forum/#!forum/send-later-users) asked how to
generate an email a certain number of days before a particular weekday of the
month, e.g., "five days before the fourth Wednesday of the month." This
function demonstrates how to do that. It can be configured by passing in
arguments or by editing the defaults at the top of the function.

Help text
---------

Send an email n days before a specific day of the week on a specific week of
the month, e.g., "9:00am five days before the 4th Wednesday of the month."
Arguments:

- Recurring -- true or false value indicating whether this is a recurring
  message (default false)
- Weekday to look for (0 is Sunday, 1 is Monday, etc.); default is Wednesday
  (3)
- Which week of the month to look for (first, second, third, etc.) (default is
  4th)
- How many days in advance to send the message (default is 5)
- Hour at which to send the message (default is 9)
- Minutes after the hour at which to send the message (default is 0)
  
Specifying "-" for any argument is the same as not specifying the argument at
all.

If today is the day the email should be sent, the message will be scheduled for
today even if the specified hour and minute are earlier than the current time,
which means that Send Later will send out today's late but if you've specified
recurring then subsequent ones will be sent out on time.

Code
----

function getarg(num, deflt) {
  if (args[num] == '-' || args[num] === undefined)
    return deflt;
  return args[num];
}

recurring = getarg(0, false);
weekday = getarg(1, 3);
week_number = getarg(2, 4);
days_in_advance = getarg(3, 5);
send_hour = getarg(5, 9);
send_minute = getarg(5, 0);

one_day_value = 24 * 60 * 60 * 1000;
in_advance_value = one_day_value * days_in_advance;

if (prev)
  now = new Date(prev.valueOf() + one_day_value);
else
  now = new Date();

while (true) {
  then = new Date(now.valueOf() + in_advance_value);
  if (then.getDay() == weekday &&
      Math.floor((then.getDate() - 1) / 7) == week_number - 1) {
    break;
  }
  now = new Date(now.valueOf() + one_day_value);
}

now.setHours(send_hour);
now.setMinutes(send_minute);
now.setSeconds(0);
now.setMilliseconds(0);

next = now;

if (recurring) {
  nextspec = "function " + specname;
  nextargs = [true, weekday, week_number, days_in_advance,
              send_hour, send_minute];
}
